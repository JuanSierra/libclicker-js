{"version":3,"file":"libclicker.js","sources":["../src/PurchaseResult.js","../src/item.js","../src/automator.js","../src/currency.js","../src/world.js","../src/generator.js","../src/modifier.js","../src/libclicker.js"],"sourcesContent":["const PurchaseResult = {\r\n    OK : 'OK',\r\n    INSUFFICIENT_FUNDS : 'INSUFFICIENT_FUNDS',\r\n    MAX_LEVEL_REACHED : 'MAX_LEVEL_REACHED'\r\n}\r\n\r\nmodule.exports = PurchaseResult;","const PurchaseResult = require('./PurchaseResult');\r\n\r\n/**\r\n * Base class for all the purchasable \"items\".\r\n * \r\n * @author Harri Pellikka\r\n */\r\nclass Item {\r\n    /**\r\n     * Constructs a new item\r\n     * @param world World this item belongs to\r\n     */\r\n    constructor (world, name = \"Nameless Item\") {\r\n        /**\r\n         * World this item belongs to\r\n         */\r\n        this.world = world;\r\n\r\n        /**\r\n         * Modifiers applied to this item\r\n         */\r\n        this.modifiers = [];\r\n\r\n        /**\r\n         * The base price of the item (i.e. the price of the first level of this item)\r\n         */\r\n        this.basePrice = 1;//BigInteger.ONE;\r\n\r\n        /**\r\n         * Name of this item\r\n         */\r\n        this.name = name;\r\n\r\n        /**\r\n         * Description text for this item\r\n         */\r\n        this.description = \"No description.\";\r\n\r\n        /**\r\n         * Current level of this item\r\n         */\r\n        this.itemLevel = 0;\r\n\r\n        /**\r\n         * Max. item level\r\n         */\r\n        this.maxItemLevel = 99999999;//Long.MAX_VALUE;\r\n\r\n        /**\r\n         * Price multiplier per level. This is used in the price formula\r\n         * like this: price = (base price) * (price multiplier) ^ (item level)\r\n         */\r\n        this.priceMultiplier = 1.145;\r\n    }\r\n\r\n    /**\r\n     * Retrieves the name of this item\r\n     *\r\n     * @return {string} Name of this item\r\n     */\r\n    getName() {\r\n        return this.name;\r\n    }\r\n\r\n    /**\r\n     * Sets the name of this item\r\n     *\r\n     * @param name New name for this item\r\n     */\r\n    setName(name) {\r\n        //if (name == null || name.length() == 0)\r\n            //throw new RuntimeException(\"Item name cannot be null or empty\");\r\n        this.name = name;\r\n    }\r\n\r\n    /**\r\n     * This method logs the given message to the browser console.\r\n     *\r\n     * @public\r\n     * @method\r\n     */\r\n    getDescription() {\r\n        return this.description;\r\n    }\r\n\r\n    setDescription(description) {\r\n        this.description = description;\r\n    }\r\n\r\n    /**\r\n     * Retrieves the base price of this item\r\n     *\r\n     * @return Base price of this item\r\n     */\r\n    getBasePrice() {\r\n        return this.basePrice;\r\n    }\r\n\r\n    setBasePrice(basePrice) {\r\n        this.basePrice = basePrice;\r\n    }\r\n\r\n    getPrice() {\r\n        var tmp = this.basePrice;\r\n        tmp = tmp * Math.pow(this.priceMultiplier, this.itemLevel);\r\n        return tmp;\r\n    }\r\n\r\n    buyWith(currency) {\r\n        //if (currency == null) throw new IllegalArgumentException(\"Currency cannot be null\");\r\n        if (this.itemLevel >= this.maxItemLevel)\r\n            return PurchaseResult.MAX_LEVEL_REACHED;\r\n\r\n        var price = this.getPrice();\r\n        var result = currency.value - price;\r\n\t\t\r\n        if (result < 0) {\r\n            return PurchaseResult.INSUFFICIENT_FUNDS;\r\n        }\r\n        currency -= price;//currency.sub(price);\r\n        this.upgrade();\r\n        return PurchaseResult.OK;\r\n    }\r\n\r\n    /**\r\n     * Sets the base price of this item\r\n     *\r\n     * @param basePrice New base price for this item\r\n     */\r\n    setBasePrice(basePrice) {\r\n        if (basePrice == null) throw \"Base price cannot be null\";\r\n        if (basePrice == 0)\r\n            throw \"Base price cannot be zero\";\r\n\r\n        this.basePrice = basePrice;\r\n    }\r\n\r\n    setBasePrice(basePrice) {\r\n        this.basePrice = basePrice;//new BigInteger(\"\" + basePrice);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the price multiplier\r\n     *\r\n     * @return Price multiplier\r\n     */\r\n    getPriceMultiplier() {\r\n        return this.priceMultiplier;\r\n    }\r\n\r\n    /**\r\n     * Sets the price multiplier of this item\r\n     *\r\n     * @param multiplier Price multiplier\r\n     */\r\n    setPriceMultiplier(multiplier) {\r\n        this.priceMultiplier = multiplier;\r\n    }\r\n\r\n    getMaxItemLevel() {\r\n        return this.maxItemLevel;\r\n    }\r\n\r\n    setMaxItemLevel(maxLvl) {\r\n        if (maxLvl <= 0) throw \"Max item level cannot be zero or negative\";\r\n        this.maxItemLevel = maxLvl;\r\n    }\r\n\r\n    getItemLevel() {\r\n        return this.itemLevel;\r\n    }\r\n\r\n    setItemLevel(lvl) {\r\n        this.itemLevel = lvl < 0 ? 0 : lvl > this.maxItemLevel ? this.maxItemLevel : lvl;\r\n    }\r\n\r\n    upgrade() {\r\n        if (this.itemLevel < this.maxItemLevel) {\r\n            this.itemLevel++;\r\n        }\r\n    }\r\n\r\n    downgrade() {\r\n        if (this.itemLevel > 0) {\r\n            this.itemLevel--;\r\n        }\r\n    }\r\n\r\n    maximize() {\r\n        this.itemLevel = this.maxItemLevel;\r\n    }\r\n}\r\n\r\nmodule.exports = Item;","const Item = require('./item');\r\n\r\n/**\r\n * Automator class for automating generators.\r\n * \r\n * Normally generators are manually controlled, i.e. they generate resources\r\n * when explicitly told to. Automators are used to trigger generators\r\n * during the world's update cycles.\r\n * \r\n * @public\r\n * @class\r\n * @author Harri Pellikka\r\n */\r\nclass Automator extends Item\r\n{\r\n\t/**\r\n     * Constructs a new item\r\n     * @param world World this item belongs to\r\n     */\r\n    constructor(world, name){\r\n        super(world, name);\r\n    }\r\n\r\n    static get Builder() {\r\n        class Builder {\r\n            /**\r\n             * Constructs a new automator builder\r\n             * @param world World the automator belongs to\r\n             */\r\n            constructor(world){\r\n                this.mWorld = world;\r\n                this.mGenerator;\r\n                this.mTickRate = 1.0;\r\n                this.mTickTimer = 0.0;\r\n                this.mName = \"Nameless automator\";\r\n                this.mEnabled = true;\r\n                this.mBasePrice = 999999999;//BigInteger.ONE;\r\n                this.mPriceMultiplier = 1.1;\r\n                this.mTickRateMultiplier = 1.08;\r\n            }\r\n\r\n            basePrice(name) {\r\n                this.basePrice = name;\r\n                \r\n                return this;\r\n            }\r\n            \r\n            priceMultiplier(multiplier) {\r\n                this._priceMultiplier = multiplier;\r\n\r\n                return this;\r\n            }\r\n            \r\n            tickRateMultiplier(multiplier) {\r\n                this._tickRateMultiplier  = multiplier;\r\n\r\n                return this;\r\n            }\r\n            \r\n            /**\r\n             * Sets the target generator this automator should automate.\r\n             * \r\n             * @param generator Generator to automate\r\n             * @return This builder for chaining\r\n             */\r\n            automate(generator) {\r\n                this.generator  = generator;\r\n\r\n                return this;\r\n            }\r\n\r\n            /**\r\n             * Sets the name for this automator.\r\n             * \r\n             * @param name Name\r\n             * @return This builder for chaining\r\n             */\r\n            name(name) {\r\n                this.name = name;\r\n\r\n                return this;\r\n            }\r\n             \r\n            /**\r\n             * Sets the tick rate of this automator, i.e. how often\r\n             * this automator should do its business.\r\n             * \r\n             * @param seconds Tick rate in seconds\r\n             * @return This builder for chaining\r\n             */\r\n            every(seconds) {\r\n                this.tickRate = seconds;\r\n\r\n                return this;\r\n            }\r\n            \r\n            /**\r\n             * Constructs the automator based on the given properties.\r\n             * @return The automator\r\n             */\r\n            build() {\r\n                //if (generator == null) throw new IllegalStateException(\"Generator cannot be null\");\r\n                var a = new Automator(this.mWorld, this.name);\r\n                a.generator = this.generator;\r\n                a.enabled = this.mEnabled;\r\n                a.basePrice = this.basePrice;\r\n                a._priceMultiplier = this._priceMultiplier;\r\n                //console.log('mult '+ this._tickRateMultiplier)\r\n                a.multiplier = this._tickRateMultiplier;\r\n                a.tickRate = this.tickRate;\r\n                a.tickTimer = this.mTickTimer;\r\n                a.actualTickRate = this.actualTickRate;\r\n                \r\n                this.mWorld.addAutomator(a);\r\n                \r\n                return a;\r\n            }\r\n        }\r\n\r\n        return Builder;\r\n    }\r\n\r\n    /**\r\n     * Enables this automator. Automators are enabled by default when\r\n     * they are created.\r\n     */\r\n    enable() {\r\n        if (!this.enabled) {\r\n            this.world.addAutomator(this);\r\n            this.enabled = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Disables this automator, effectively turning the automation off.\r\n     */\r\n    disable() {\r\n        if (this.enabled) {\r\n            this.world.removeAutomator(this);\r\n            this.enabled = false;\r\n        }\r\n    }\r\n\r\n\t//this.super_upgrade = this.upgrade;\r\n    upgrade() {\r\n        super.upgrade(); //To change body of generated methods, choose Tools | Templates.\r\n        this.actualTickRate = this.getFinalTickRate();\r\n    }\r\n\r\n    getFinalTickRate() {\r\n        if (this.itemLevel == 0) return 0.0;\r\n        var r = this.tickRate;\r\n        var m = Math.pow(this.multiplier, this.itemLevel - 1);\r\n\r\n        return r / m;\r\n    }\r\n\r\n    update(delta){\r\n        if (!this.enabled || this.itemLevel == 0) return;\r\n\r\n        this.tickTimer += delta;\r\n        while (this.tickTimer >= this.actualTickRate) {\r\n            this.tickTimer -= this.actualTickRate;\r\n            this.generator.process();    \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieves the tick rate of this automator.\r\n     * @return Tick rate in seconds\r\n     */\r\n    getTickRate() {\r\n        return this.tickRate;\r\n    }\r\n\r\n    /**\r\n     * Sets the tick rate of this automator.\r\n     * \r\n     * @param tickRate Tick rate in seconds\r\n     */\r\n    setTickRate(tickRate) {\r\n        this.tickRate = tickRate;\r\n        if (this.tickRate < 0.0) this.tickRate = 0.0;\r\n    }\r\n\r\n    /**\r\n     * Retrieves the percentage of the tick. Useful\r\n     * when creating progress bars for generators.\r\n     * \r\n     * @return Percentage of tick completion\r\n     */\r\n    getTimerPercentage() {\r\n        return this.tickRate != 0.0 ? this.tickTimer / this.tickRate : 1.0;\r\n    }\r\n}\r\n\r\nmodule.exports = Automator;","/**\r\n * Base class for all currencies.\r\n *\r\n * @author Harri Pellikka\r\n */\r\nclass Currency\r\n{\r\n    constructor (build){\r\n        this.name = build.mName;\r\n        this.world = build.world;\r\n        this.value = 0;\r\n    }\r\n\r\n    static get Builder() {\r\n        class Builder {\r\n            constructor(world) {\r\n                this.mName = \"Gold\";\r\n                this.world = world;\r\n            }\r\n\r\n            name(name) {\r\n                this.mName = name;\r\n                return this;\r\n            }\r\n\r\n            build() {\r\n                return new Currency(this);\r\n            }\r\n        }\r\n\r\n        return Builder;\r\n    }\r\n\t\r\n    getAmountAsString() {\r\n        return this.value.toString();\r\n    }\r\n\r\n    add(amount) {\r\n        this.value = this.value + amount;\r\n    }\r\n\r\n    sub(amount) {\r\n        this.value = this.value - amount;\r\n    }\r\n\r\n    multiply(multiplier) {\r\n        this.value = this.value * multiplier;\r\n    }\r\n\r\n    set(newValue) {\r\n        this.value = newValue;\r\n    }\r\n\r\n\tequals(a,b) {\r\n\t\treturn JSON.stringify(a) === JSON.stringify(b);\r\n\t}\r\n}\r\n\r\nmodule.exports = Currency","if (!Array.prototype.contains) {\r\n  Array.prototype.contains = function(element) {\r\n\tfor(var i in this){\r\n\t\tif (element === this[i]){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn false;\r\n  }\r\n}\r\n\r\nif (!Array.prototype.indexOf) {\r\n  Array.prototype.indexOf = function(element) {\r\n\tfor(var i in this){\r\n\t\tif (element === this[i]){\r\n\t\t\treturn i;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn -1;\r\n  }\r\n}\r\n\r\nif (!Array.prototype.remove) {\r\n  Array.prototype.remove = function(element) {\r\n    var i = this.indexOf(element);\r\n    \r\n\tif(i>=0){\r\n        this.splice(i, 1);\r\n\t}\r\n  }\r\n}\r\n\r\n/**\r\n * A container for all the clicker objects\r\n *\r\n * @author Harri Pellikka\r\n */\r\nclass World {\r\n\t/**\r\n     * Constructs a new world. All the other components require an existing\r\n     * \"world\" to function. A world is a container for the whole system.\r\n     */\r\n    constructor () \r\n    {\r\n        this.generators = [];\r\n        this.automators = [];\r\n        this.currencies = [];\r\n        this.modifiers = [];\r\n    \r\n        this._speedMultiplier = 1.0;\r\n        this._updateAutomators = true;\r\n    }\r\n\r\n\tequals(a,b) {\r\n\t\treturn JSON.stringify(a) === JSON.stringify(b);\r\n\t}\r\n\t\r\n\t/**\r\n     * Adds a new generator to this world\r\n     * @param generator Generator to add\r\n     */\r\n    addGenerator(generator) {\r\n        if ( generator && !this.generators.contains(generator) ) {\r\n            this.generators.push(generator);\r\n        }\r\n    }\r\n\r\n\t/**\r\n     * Returns the number of generators in this world\r\n     * @return The number of generators in this world\r\n     */\r\n    getGeneratorCount() {\r\n        return this.generators.length;\r\n    }\r\n\r\n\t/**\r\n     * Removes a generator\r\n     * @param generator Generator to remove\r\n     */\r\n    removeGenerator(generator) {\r\n        if (generator && this.generators.contains(generator)) {\r\n            this.generators.remove(generator);\r\n        }\r\n    }\r\n\r\n\t/**\r\n     * Removes all the generators from this world\r\n     */\r\n    removeAllGenerators() {\r\n        generators = [];\r\n    }\r\n\r\n    /**\r\n     * Registers a new currency in the world, making\r\n     * the currency usable.\r\n     */\r\n    addCurrency(c) {\r\n        if (c && !this.currencies.contains(c) ) {\r\n            this.currencies.push(c);\r\n        }\r\n    }\r\n\t\r\n    /**\r\n     * Removes a currency from the world.\r\n     */\r\n    removeCurrency(c) {\r\n        if (c) {\r\n            this.currencies.remove(c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieves a currency at the given index.\r\n     * The index is based on the order in which\r\n     * the currencies were added to the world.\r\n     *\r\n     * @param index of the currency\r\n     * @return the currency at the given index, or null if not found\r\n     */\r\n    getCurrency(index) {\r\n        return this.currencies[index];\r\n    }\r\n\r\n    /**\r\n     * Retrieves a list of all the currencies currently\r\n     * registered in the world.\r\n     *\r\n     * @return list of currencies\r\n     */\r\n    getCurrencies() {\r\n        return this.currencies;\r\n    }\r\n\r\n    /**\r\n     * Removes all currencies registered in the world.\r\n     */\r\n    removeAllCurrencies() {\r\n        this.currencies = [];\r\n    }\r\n\r\n    /**\r\n     * Advances the world state by the given amount of seconds.\r\n     * Useful when calculating away-from-keyboard income etc.\r\n     *\r\n     * @param seconds Seconds to advance\r\n     */\r\n    update(seconds) {\r\n        seconds *= this._speedMultiplier;\r\n\r\n        if (this._updateAutomators) {\r\n            this.automators.forEach(function(a){\r\n                a.update(seconds);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Registers a new automator to the world.\r\n     *\r\n     * @param automator to register\r\n     */\r\n    addAutomator(automator) {\r\n        if (automator && !this.automators.contains(automator)) {\r\n            this.automators.push(automator);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Registers a new modifier\r\n     *\r\n     * @param modifier to register\r\n     */\r\n    addModifier(modifier) {\r\n        if (modifier && !this.modifiers.contains(modifier)) {\r\n            this.modifiers.push(modifier);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieves the global speed multiplier\r\n     *\r\n     * @return the speed multiplier\r\n     */\r\n    getSpeedMultiplier() {\r\n        return this._speedMultiplier;\r\n    }\r\n\r\n    /**\r\n     * Sets the global speed multiplier\r\n     *\r\n     * @param multiplier of the world update speed\r\n     */\r\n    setSpeedMultiplier (multiplier) {\r\n        this._speedMultiplier = multiplier;\r\n    }\r\n\r\n    /**\r\n     * Disables all automators\r\n     */\r\n    disableAutomators() {\r\n        this._updateAutomators = false;\r\n    }\r\n\r\n    /**\r\n     * Enables all automators\r\n     */\r\n    enableAutomators() {\r\n        this._updateAutomators = true;\r\n    }\r\n\r\n    /**\r\n     * Removes an automator from the world\r\n     *\r\n     * @param automator to remove\r\n     */\r\n    removeAutomator(automator) {\r\n        if (automator != null) {\r\n            this.automators.remove(automator);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieves all the automators registered in the world\r\n     *\r\n     * @return list of automators\r\n     */\r\n    getAutomators() {\r\n        return this.automators;\r\n    }\r\n\r\n    /**\r\n     * Retrieves all the modifiers registered in the world\r\n     *\r\n     * @return list of modifiers\r\n     */\r\n    getModifiers() {\r\n        return this.modifiers;\r\n    }\r\n\r\n    /**\r\n     * Removes a modifier from the world\r\n     *\r\n     * @param modifier to remove\r\n     */\r\n    removeModifier(modifier) {\r\n        if (modifier) {\r\n            this.modifiers.remove(modifier);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Queries whether or not the automators are enabled.\r\n     *\r\n     * @return True if automation is enabled, false otherwise.\r\n     */\r\n    isAutomationEnabled() {\r\n        return this._updateAutomators;\r\n    }\r\n}\r\n\r\nmodule.exports = World","const Item = require('./item');\r\n\r\n/**\r\n * A base class for all the generators.\r\n * <p>\r\n * Generators are used to produce resources (e.g. currencies), and\r\n * can be controlled either manually or automatically by using\r\n * an Automator.\r\n */\r\nclass Generator extends Item {\r\n    constructor(build){\r\n        super(build.mWorld, build.mName);\r\n\r\n        this.maxItemLevel = build.mMaxLevel;\r\n        this.amountMultiplier = build.mAmountMultiplier;\r\n        this.useRemainder = build.mUseRemainder;\r\n        this.timesProcessed = build.mTimesProcessed;\r\n        this.currency = build.mCurrency;\r\n        this.baseAmount = build.mBaseAmount;\r\n        \r\n\r\n        this.remainder = 0;\r\n        this.modifiers = [];\r\n    }\r\n\r\n    /**\r\n     * Builder class for creating new generators\r\n     */\r\n\tstatic get Builder() {\r\n        class Builder {\r\n            constructor(world) {\r\n                this.mWorld = world;\r\n                this.mName = \"Nameless generator\";\r\n                this.mOnProcessed = null;\r\n                this.mCurrency = null;\r\n                this.mBaseAmount = 1;\r\n                this.mAmountMultiplier = 1.1;\r\n                this.mMaxLevel = 999999999;\r\n                this.mBasePrice = 999999999;//BigInteger.ONE;\r\n                this.mPriceMultiplier = 1.1;\r\n                this.mProbability = 1.0;\r\n                this.mProbabilitySet = false;\r\n                this.mUseRemainder = true;\r\n                this.mCooldown = 0.0;\r\n                this.mTimesProcessed = 0;\r\n            }\r\n            /**\r\n             * Sets the cooldown of this generator (in seconds).\r\n             * This is the minimum time between processing this\r\n             * generator.\r\n             *\r\n             * @param cooldown in seconds\r\n             * @return This builder for chaining\r\n             */\r\n            cooldown(cooldown) {\r\n                this.cooldown = cooldown;\r\n                return this;\r\n            }\r\n\r\n            /**\r\n             * Store remainder of resources and generate an extra\r\n             * when the remainder \"overflows\"\r\n             *\r\n             * @return This builder for chaining\r\n             */\r\n            useRemainder() {\r\n                this.useRemainder = true;\r\n                return this;\r\n            }\r\n\r\n            /**\r\n             * Discard remainder of resources when generating.\r\n             *\r\n             * @return This builder for chaining\r\n             */\r\n            discardRemainder() {\r\n                this.useRemainder = false;\r\n                return this;\r\n            }\r\n\r\n            /**\r\n             * Sets the name for the generator\r\n             *\r\n             * @param name Name for the generator\r\n             * @return This builder for chaining\r\n             */\r\n            name(name) {\r\n                this.name = name;\r\n                return this;\r\n            }\r\n\r\n            /**\r\n             * Sets the multiplier for resource generation. This multiplier\r\n             * is used in the formula (amount) = (base amount) * (multiplier) ^ (level)\r\n             *\r\n             * @param multiplier Amount generation multiplier per level\r\n             * @return This builder for chaining\r\n             */\r\n            multiplier(multiplier) {\r\n                this.mAmountMultiplier = multiplier;\r\n                return this;\r\n            }\r\n\r\n            /**\r\n             * Sets the maximum allowed level for this generator. The max level must\r\n             * be greated than zero.\r\n             *\r\n             * @param maxLevel Maximum allowed level for this generator\r\n             * @return This builder for chaining\r\n             */\r\n            /*this.maxLevel = function(maxLevel) {\r\n                //if (maxLevel <= 0)\r\n                //    throw new IllegalArgumentException(\"Max level must be greater than 0\");\r\n                self.maxLevel = maxLevel;\r\n                return this;\r\n            }*/\r\n\r\n            /**\r\n             * Sets the base amount of resources generated by this generator.\r\n             * This is the amount the generator generates at level 1 and is used\r\n             * as the base for the higher levels.\r\n             *\r\n             * @param amount Base amount of resources generated at level 1\r\n             * @return This builder for chaining\r\n             */\r\n            baseAmount(amount) {\r\n                if (amount == null) throw \"Base amount cannot be null\";\r\n                this.mBaseAmount = amount;\r\n                return this;\r\n            }\r\n\r\n            /**\r\n             * Sets the currency that should be generated by the generator.\r\n             *\r\n             * @param resource Resource to generate\r\n             * @return This builder for chaining\r\n             * @throws IllegalArgumentException Thrown if the currency is null\r\n             */\r\n            generate(resource) { //throws IllegalArgumentException {\r\n                if (resource == null) throw \"Currency cannot be null\";\r\n                this.mCurrency = resource;\r\n                return this;\r\n            }\r\n\r\n            /**\r\n             * Sets a callback for the generator to be called when the generator\r\n             * has finished its processing cycle (i.e. has generated something).\r\n             *\r\n             * @param callback Callback to call after generating something\r\n             * @return This builder for chaining\r\n             */\r\n            callback(callback) {\r\n                this.onProcessed = callback;\r\n                return this;\r\n            }\r\n\r\n            price(price) {\r\n                this.basePrice = price;\r\n                return this;\r\n            }\r\n\r\n            priceMultiplier(multiplier) {\r\n                this.priceMultiplier = multiplier;\r\n                return this;\r\n            }\r\n\r\n            /**\r\n             * Set a probability for this generator to \"work\" when it's processed\r\n             *\r\n             * @param probability Probability percentage (between 0.0 and 1.0)\r\n             * @return This builder for chaining\r\n             */\r\n            probability(probability) {\r\n                if (probability < 0 || probability > 1.0)\r\n                    throw \"Probability should be between 0.0 and 1.0\";\r\n\r\n                this.probability = probability;\r\n                this.probabilitySet = true;\r\n                \r\n                return this;\r\n            }\r\n\r\n            build() {\r\n                return new Generator(this);\r\n            }\r\n        }\r\n\r\n        return Builder;\r\n    }\r\n\r\n\tequals(a,b) {\r\n\t\treturn JSON.stringify(a) === JSON.stringify(b);\r\n\t}\r\n\t\r\n\tupgrade() {\r\n\t\tif (this.itemLevel < this.maxItemLevel) {\r\n            this.itemLevel++;\r\n        }\r\n\t}\r\n\r\n    /**\r\n     * Downgrades this generator by one level\r\n     */\r\n    downgrade() {\r\n        if (this.itemLevel > 0) {\r\n            this.itemLevel--;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieves the amount this generator currently is generating per\r\n     * processing cycle\r\n     *\r\n     * @return Amount of resources generated by this generator\r\n     * BIG INTEGER\r\n     */\r\n    getGeneratedAmount() {\r\n        if (this.itemLevel == 0) return 0;\r\n\r\n        var tmp = this.baseAmount;\r\n        tmp = tmp * Math.pow(this.amountMultiplier, this.itemLevel - 1);\r\n\r\n        if (this.useRemainder) {\r\n            var tmpRem = tmp % 1;\r\n            this.remainder += tmpRem;\r\n            if (this.remainder >= 0.999) {\r\n                this.remainder -= 1.0;\r\n                tmp = tmp + 1;\r\n            }\r\n        }\r\n        tmp = this.processModifiers(tmp);\r\n\r\n        return parseInt(tmp);\r\n    }\r\n\r\n    processModifiers(val) {\r\n        if (this.modifiers.length == 0) return val;\r\n\r\n        for(var i = 0; i<this.modifiers.length; i++){\r\n            var d = this.modifiers[i].getMultiplier();\r\n\r\n            if (d != 1.0) {\r\n                val = val * d;\r\n            }\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * Determines if this generator should generate anything based on its\r\n     * properties such as item level and probability.\r\n     *\r\n     * @return True if should work, false otherwise\r\n     */\r\n    isWorking() {\r\n        if (this.itemLevel > 0) {\r\n            if (!this.useProbability || Math.Random() < this.probability) return true;\r\n        }\r\n\t\t\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Processes this generator, generating resources as per the rules\r\n     * of this generator.\r\n     */\r\n    process() {\r\n        if (this.isWorking()) {\r\n            this.currency.add(this.getGeneratedAmount());\r\n            this.timesProcessed++;\r\n            //if (callback != null) callback.onProcessed();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieves the number of times this generator has done its processing\r\n     *\r\n     * @return Number of times processed\r\n     */\r\n    getTimesProcessed() {\r\n        return this.timesProcessed;\r\n    }\r\n\r\n    attachModifier(modifier) {\r\n        if (modifier && !this.modifiers.contains(modifier)) {\r\n            this.modifiers.push(modifier);\r\n        }\r\n    }\r\n\r\n    detachModifier(modifier) {\r\n        if (modifier) {\r\n            this.modifiers.remove(modifier);\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = Generator;","/*\r\n * The MIT License\r\n *\r\n * Copyright 2015 Harri Pellikka.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\nconst Item = require('./item');\r\nconst World = require('./world');\r\nconst Generator = require('./generator');\r\n\r\n\r\n/**\r\n * A base class for all the modifiers.\r\n * <p>\r\n * A modifier does \"something\" to a component (generator, automator, the\r\n * world etc), for example speeds up, slows down, increases production\r\n * or something similar.\r\n *\r\n * @author Harri Pellikka\r\n */\r\nclass WorldTarget\r\n{\r\n    constructor(world){\r\n        this.mWorld = world;\r\n        this.mSpeedMultiplier = 1.0;\r\n        this.mDisableActivators = false;\r\n    }\r\n\r\n    /**\r\n     * Speeds up all the processing by the given multiplier.\r\n     * @param multiplier Multiplier for advancing the time\r\n     * @return This target for chaining\r\n     */\r\n    speedBy(multiplier)\r\n    {\r\n        this.mSpeedMultiplier = multiplier;\r\n        return this;\r\n    }\r\n    \r\n    /**\r\n     * Disables all the activators\r\n     * @return This target for chaining\r\n     */\r\n    disableActivators()\r\n    {\r\n        this.mDisableActivators = true;\r\n        return this;\r\n    }\r\n    \r\n    /**\r\n     * Creates the actual modifier based on the given settings\r\n     * @return Modifier \r\n     */\r\n    build()\r\n    {\r\n        var m = new WorldModifier(this.mWorld);\r\n        m.mSpeedMultiplier = this.mSpeedMultiplier;\r\n        m.mDisableActivators = this.mDisableActivators;\r\n        \r\n        return m;\r\n    }\r\n}\r\n    \r\n/**\r\n * A modifier settings class for generator modifiers.\r\n * Keeps track of all the parameters the modifier should\r\n * modify.\r\n */\r\nclass GeneratorTarget\r\n{\r\n    constructor(gen){\r\n        this.mGenerator = gen;\r\n        this.mMultiplier = 1.0;\r\n    }\r\n    \r\n    /**\r\n     * Multiplies the production of the generator.\r\n     * \r\n     * @param multiplier Multiplier\r\n     * @return This target for chaining\r\n     */\r\n    multiplier(multiplier)\r\n    {\r\n        this.mMultiplier = multiplier;\r\n        return this;\r\n    }\r\n    \r\n    /**\r\n     * Constructs the actual modifier with the given settings\r\n     * @return Modifier as per the given settings\r\n     */\r\n    build()\r\n    {\r\n        var m = new GeneratorModifier(this.mGenerator);\r\n        m.mMultiplier = this.mMultiplier;\r\n        return m;\r\n    }\r\n}\r\n\r\n/**\r\n * A base class for all the modifiers.\r\n * \r\n * A modifier does \"something\" to a component (generator, automator, the\r\n * world etc), for example speeds up, slows down, increases production\r\n * or something similar.\r\n *\r\n * @author Harri Pellikka\r\n */\r\n class Modifier extends Item\r\n {\r\n    constructor(world, name){\r\n        super(world, name);\r\n        this.mEnable = false;\r\n    }\r\n\r\n    static get Builder() {\r\n        class Builder\r\n        {\r\n            constructor(){}\r\n\r\n            modify(obj){\r\n                if(obj instanceof World)\r\n                    return new WorldTarget(obj);\r\n                \r\n                if(obj instanceof Generator)\r\n                    return new GeneratorTarget(obj);\r\n            }\r\n        }\r\n\r\n        return Builder;\r\n    }\r\n \r\n    /**\r\n     * Enables this modifier, i.e. makes it active\r\n     */\r\n    enable() {\r\n        if(!this.mEnabled)\r\n        {\r\n            this.mEnabled = true;\r\n            this.world.addModifier(this);\r\n            this.onEnable();\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Disables this modifier, i.e. makes it inactive\r\n     */\r\n    disable() {\r\n        \r\n        if(this.mEnabled)\r\n        { \r\n            this.onDisable();\r\n            this.world.removeModifier(this);\r\n            this.mEnabled = false;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Checks whether or not this modifier is enabled\r\n     * @return True if enabled, false otherwise\r\n     */\r\n    isEnabled() {\r\n        return this.mEnabled;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Modifier for worlds\r\n */\r\nclass WorldModifier extends Modifier{\r\n    constructor(world) {\r\n        super(world);\r\n        /**\r\n        * Modifier for worlds\r\n        */\r\n        this.mSpeedMultiplier;\r\n        this.mDisableActivators;\r\n\r\n        this.mSpeedMultiplierBefore;\r\n        this.mSpeedMultiplierAfter;\r\n    }\r\n\r\n    onEnable() {\r\n        if(this.mSpeedMultiplier != 1.0) {\r\n            this.mSpeedMultiplierBefore = this.world.getSpeedMultiplier();\r\n            this.mSpeedMultiplierAfter = this.mSpeedMultiplier * this.mSpeedMultiplierBefore;\r\n            this.world.setSpeedMultiplier(this.mSpeedMultiplierAfter);\r\n        }\r\n        \r\n        if(this.mDisableActivators) {\r\n            this.world.disableAutomators();\r\n        }\r\n    }\r\n\r\n    onDisable() {\r\n        if(this.mSpeedMultiplier != 1.0) {\r\n            \r\n            var d = this.world.getSpeedMultiplier();\r\n            d /= this.mSpeedMultiplier;\r\n            this.world.setSpeedMultiplier(d);\r\n        }\r\n\r\n        if(this.mDisableActivators) {\r\n            this.world.enableAutomators();\r\n        }\r\n    }\r\n\r\n    modify(world) {\r\n        return new WorldTarget(world);\r\n    }\r\n}\r\n\r\n/**\r\n* Modifier for generators.\r\n*/\r\nclass GeneratorModifier extends Modifier\r\n{\r\n    constructor (generator){\r\n        super(generator.world);\r\n        this.mGenerator = generator;\r\n        this.mMultiplier = 1.0;\r\n    }\r\n\r\n    onEnable()\r\n    {\r\n        this.mGenerator.attachModifier(this);\r\n    }\r\n\r\n    onDisable()\r\n    {\r\n        this.mGenerator.detachModifier(this);\r\n    }\r\n\r\n    getMultiplier()\r\n    {\r\n        return this.mMultiplier;\r\n    }\r\n}\r\n\r\n\r\nmodule.exports = { WorldTarget, GeneratorTarget, Modifier, WorldModifier, GeneratorModifier };","const Item = require('./item');\r\nconst Automator = require('./automator');\r\nconst Currency = require('./currency');\r\nconst World = require('./world');\r\nconst Modifier = require('./modifier');\r\n\r\nmodule.exports = {\r\n    Item,\r\n    Automator,\r\n    Currency,\r\n    World,\r\n    Modifier\r\n}"],"names":["PurchaseResult","Item","World","Generator","Automator","Currency","Modifier"],"mappings":"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"}